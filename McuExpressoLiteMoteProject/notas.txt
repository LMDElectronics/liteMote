9duties:
-------

Molaría usar el led RGB para mostrar en colores el campo magnetico medido con el fxos87

Este driver es el que sabe como esta estructurada la informacion en flash interna y usara los drivers de bajo nivel
para realizar las operaciones de lectura y escritura de datos de la aplicacion

RW datos de paquetes en flash: COMPLETO

	Driver SPI: COMPLETO
	--------------------

		Comunica la info desde el sistema al peroiferico spi HW

	Driver Flash: COMPLETO
	----------------------

		escribe y lee datos donde se le ordene
		
	Driver External flash manager COMPLETO:
	---------------------------------------
		
	 	Decide la gestion de las operaciones a realizar por la flash cuando hay que grabar y leer datos de sistema
	 	
	Driver Configuration manager COMPLETO:
	--------------------------------------
		
		Se le pasa el payload y el tipo de mensaje para que guarde el pauload en flash externa

	- Driver de radio:
	------------------

		- NUCLEO S2868A1SPI PINOUT:
		
		SPI_CLK:         		[SCK]:	(CN9,D3)  BLUE
		SPI_MOSI				[SDI]: 	(CN5,D11) GREEN
		SPI_MISO				[SDO]: 	(CN5,D12) YELLOW
		SPI_CS:					[CS] : 	(CN8,A1)  VIOLET
		SHUTODWN				[SDN]: 	(CN9,D7)  WHITE			
		GPIO0 as interrupt:		[irq]:	(CN8,A0)  GREY	
		VDD:							(CN6,4)	  ORANGE	
		GND:							(CN6,6,7) BLACK
		
		- Fredom board kl82 RF Header
		1 - GND
		2 - Vdd
		3 - RF Chip enabled (shutdown), PTC12
		4 - Chip select, PTD4
		5 - SCK 	(SPI0)
		6 - MOSI 	(SPI0)
		7-  MISO	(SPI0)
		8 - RF IRQ, PTC16   
				
cositas restantes:
------------------
	
  -Urgente:
  	- Documentación de capas TODO
  	
  		Packet_manager:
  			Process_Motor:
  				Checks Rx serial received packets
  				Checks Rx radio received packets
  				
  				creates Tx serial packets to be sent
  				creates Tx radio packets to be sent
  		 
  			SerialManager
  				Rx serial port
  				Tx serial port
  				  	
  			RadioMAnager
  				Rx radio 
  				Tx radio  	 
	 
	- pruebas de envio de paquetes radio via serie si la direccion destino no es para la base SOLUCIONADO
		- se sobreesribe el current_identity cuando se carga el health.period mirar porque, se sobreescribe en ram
		
------>		0x1FFFAC38  00020001 00050304 08090607 00000000 00000000 00000000  ........................
			0x1FFFAC50  00000000 00000000 00B71B00 00000000 00000000 00000000  ..........·.............
			0x1FFFAC68  00000000 00000000 1FFFAC94 00000000 00000000 00000401  .........¬ÿ.............
			0x1FFFAC80  1FFFAC94 00000000                                      .¬ÿ.....
			
			
------>		0x1FFFAC38  03000100 00050304 08090607 0000001E 82B4FFFD 0000827F  ................ýÿ´.....
			0x1FFFAC50  00000000 0000003C 00B71B00 00000000 00000000 00000000  ....<.....·.............
			0x1FFFAC68  00000000 00000000 1FFFAC94 00000000 00000000 00000401  .........¬ÿ.............
			0x1FFFAC80  1FFFAC94 00000000                                      .¬ÿ.....
			
			*fill*         0x1fffab32        0x2 
			 .bss.dataToTxRx
			                0x1fffab34      0x104 ./source/External_HW_Drivers/mx25l128/mx25l128.o
			                0x1fffab34                dataToTxRx
			 .bss.current_Identity_Config
			                0x1fffac38        0xc ./source/Configuration_Manager/configuration_manager.o
			                0x1fffac38                current_Identity_Config
			 .bss.current_Health_Config
			                0x1fffac44        0x2 ./source/Configuration_Manager/configuration_manager.o
			                0x1fffac44                current_Health_Config
			 *fill*         0x1fffac46        0x2 
			 .bss.current_ADC_Cal_Data
			                0x1fffac48        0x6 ./source/Configuration_Manager/configuration_manager.o
			                0x1fffac48                current_ADC_Cal_Data
			 *fill*         0x1fffac4e        0x2 
			 .bss.current_Radio_Conf_Data
			                0x1fffac50        0x5 ./source/Configuration_Manager/configuration_manager.o
			                0x1fffac50                current_Radio_Conf_Data
			 *fill*         0x1fffac55        0x3 
			 .bss.g_xtal0Freq
			                0x1fffac58        0x4 ./drivers/fsl_clock.o		
		 
		 gotcha!! el puntero de datos del spi1 de la flash, llega a la posicion ac38, donde sobreescribe los datos... habrá que mirar 
		 como poder solucionar el entuerto... sabemos porque pasa 
		 
		- inicializar Radio Manager en mota base
			- timer configurado
			- validar el tiempo de la ventana de tx
		
		- añadir timer de envio en RadioManager.c (usado para generar la ventana de Tx deseada)
				

- No tan urgente:
  	
  	el s2lp tiene problemas para configurar datarates altos EN ELLO
  	
	- driver radio
		-> configurar s2lp 
			-> seguir configurando modulos
					-> ver con el sdr si enviamos algo 			-> OK, el espectro a 868Mhz se ve que se envian datos continuamente
					-> revisar datarate y validar el correcto 	-> EN ELLO,generar datarate con la equacion darate_e > 0 pero no = 15 y probar
						-> revisar aFC
											
			-> usar 4GFSK BT=1 -> OK
			-> variar dataRate hasta el maximo que deje gfsk4 125 Ksymb/s									

	- gestor paquetes radio
	
	- añadir carrier sense para saber si el medio está ocupado antes de transmitir 	
 	
TAREAS TERMINADAS:
------------------  
  -> 0) URGENTE! pasar otra vez direcciones de nodo a 16 bits entre litemote y litemoteGateway [OK]
	-> 1) Rx en s2lp de nxp; Tx desde LiteMote [OK]

  2)  Rx en LiteMote desde Tx LiteMote
      - validar que la interrupcion de Rx en el receptor se activa RX_DATA_READY -> OK
      
      problemas:      
      	2.0) Es necesario poder arrancar el sistema sin que la interrupcion de paquete de radio recibido salte -> [OK]
          -> Se configuran las interrupciones despues de configurar el resto de pins y dejar que el s2lp salga del shutdown mode
      
        2.1) Porque el motor de rx de radio, solo funciona si lo colocamos fuera del main? [OK]
          -> generando el motor de rx
        
        2.2) poder resetear el pin de interrupcion [OK]     
          -> No podemos hacer un clear status de las interrupciones desde la ISR, mirar como hacer el check desde otro sitio    
  
		2.3) mirar porque solo recibe una vez el paquete radio enviado desde el emisor [OK]
             
		2.4) poder generar la interrupcion filtrando la direccion de destino del paquete [OK]
		
			2.4.1- pruebas Tx - Rx (sin filtraje): [OK]
			
				radio: 		868Mhz
				kbps: 		2Kbps
				channel:	0
				tx power: 	0							
			
				simplepacket
			
				-> Emisor litemote 
					Para Tx por radio:
						Origin Node: <direccion de radio de liteMote de donde se hace el Tx>
						Destination Node: <cualquier otro nodo que no sea el origen>
										
				-> receptor st-radio kit (hay que cargar el archivo para configurar los registros "Register_Setting_ook" )

			2.4.2- pruebas Tx-Rx (con filtraje): [OK] <<<---------------------------------------------------------------------------------------   
  
  
  0- Evitar el tener que llamar a "s2lp_Config_Test_Registers();" en la inicialización -> OK

  0.1 -> Mirar porque no podemos recuperar el dato de potencia de Tx en dbm desde la aplicacion GateWay: OK   
  
				URGENTE!!!!!!!!!
				0.0.1 -> Mirar poruqe al quitar la funcion que seteaba todos los registros del s2lp, ahora, no se pueden recibir tramas serie por falta de sincronismo: OK
						 Necesario añadir una cola o buffer para guardar los bytes de la UART que van llegando, ya que puede llegar mas de un caracter sin que se haya procesado el primero
						 en el motor "Serial_Manager_RX_Motor"
					
						 Se opta por bajar el bps del canal serie a 9600 de momento para poder trabajar con el motor de radio siempre comprobando el estado de Rx, mientras la gestion
						 del estado de Rx no la lleve el s2lp
							
				realizar Rx desde litemote debugando: OK
					-> valid preamble interrupt triggered OK, en paquetes enviados desde s2lp -> litemote: OK
					-> sync word interrupt triggered OK, en paquetes enviados desde s2lp -> litemote: OK  
  
  1- desde CRC sin filtro por direcciones: OK
    
    TX: desde S2lp 		-> selfAddr: x04 destAddr: x02
    RX: desde lite mote	-> selfAddr: x02 destAddr: x04
    
    1.1- Mirar porque no capturamos el numero de bytes correctos del paquete recibido... 		OK 
    1.2- Mira porque solo puede recibir el primer burst de paquetes transmitido desde el s2lp 	OK	  
  
  2- usando el filtro de direcciones: OK <<----
    
    TX: desde S2lp 		-> selfAddr: x04 destAddr: x02
    RX: desde lite mote	-> selfAddr: x02 destAddr: x04		
        
    Para poder enviar BASIC :
      Tx:
        0- PCKTCTRL4[bit 3] = 1 (including the address of the receiver in the packet to be transmitted)												
        2- PCKT_FLT_GOALS3 	= 0x03 <address of the receiver of the packet sended from Tx device> (Rx address) 
        3- PCKT_FLT_GOALS0 	= 0x04 <address of the transmiter of the packet sended from Tx device> (Tx address) 								
        
        4- Load the FIFO with the payload
        5- Send the packet
        6- Clear the FIFO after sending the packet 
        
      Rx: 
        0- IRQ_MASK0 		= 1 	(s2lp sets the configured GPIO to 0 to mark that it has data ready in Rx FIFO)
        
        1- PCKTCTRL4[bit 3]	= 1 	(including the address of the receiver in the packet to be transmitted)
        
        2_ PCKT_FLT_GOALS0 	= 0x03  (Source address of the receiver or destination address of the packet transmitted from the transmitter device)
         
        3- PCKT_FLT_OPTIONS	= 0x42  (RX timeout cannot be stopped it starts at Rx state and at the end expires)
                      (Filter comparing the address of the received packet (RX_ADDRE_FIELD0) register and the register PCKT_FLT_GOALS0)
                      (if RX_ADDRE_FIELD0 == PCKT_FLT_GOALS0 at the reception, the interrupt of DATA_READY is) 
        
        4- Set the Rx state to set the s2lp start to receving
            
      ANDAMIAJE IMPORTANTE: tal como está montado es necesario:
      
        -> en el programa s2-lp DK: cada vez que se cambia el registro PCKT_FLT_GOALS3, es necesario volver a setear la "Frequency base" y "Output power"
        -> en el receptor DEBEMOS asegurarnos de que el s2lp está en el estado de recepción para poder recibir los paquetes enviados   
  
TAREAS pendientes:
------------------
  -> 4) Rx en LiteMote desde Tx LiteMote [EN ELLO]
	-> 5) ver porque si lo ponemos en standby, despues no puede Tx [NO INICIADO]
  
  -> 6) generar un driver para el led multicolor para poder ver cuando Tx y cuando Rx 			
      
TAREA en proceso:
----------------
  1) Rx en s2lp de nxp; Tx desde LiteMoteRx desde s2lp de nxp -> LiteMote	
    - 2Kbps
    - ook
    - simplepacket	
    - 868M										
          
    Es necesario colocar LiteMote a escuchar de forma correcta. la modulacion y freq base estan correctamente configuradas (desde liteMote podemos Tx a s2lp xnucleo y este lo recibe)
      -> mirar porque noi va la interrupcion externa 				
			
				NOTA: segun datasheet el filtrado solo es valido para paquetes BASIC y STack

				radio: 		868Mhz
				kbps: 		2Kbps
				channel:	0
				tx power: 	0							
			
				simplepacket
			
				-> Emisor litemote 
					Para Tx por radio:
						Origin Node: <direccion de radio de liteMote de donde se hace el Tx>
						Destination Node: <cualquier otro nodo que no sea el origen>
										
				-> receptor st-radio kit (hay que cargar el archivo para configurar los registros "Register_Setting_ook" )
				
				Problemillas en la recepcion: 
				-----------------------------								
				primero: 03 00 01 AB CD ok
				segundo: 03 CD CD CD CD ----> porque desaparece este campo?? es un problema de la FIFO?
				tercero: 03 CD CD CD CD
				
				al volver a enviar:
				primero: 03 00 01 AB CD ok
				segundo: 03 CD CD CD CD ----> porque desaparece este campo?? es un problema de la FIFO?
				tercero: 03 CD CD CD CD
				
				Si solo enviamos un paquete por Tx, va bien, el problema es hacer mas de un start_Tx sin vaciar la FIFO
				
				Solucion:
					Dentro de la ventana de envio, al volver a estar ready, antes de enviar, es necesario cargar otra vez el mismo paquete radio en la fifo de tx
					
				Solucionado el bug, se sigue intentando que el receptor solo capture los paquetes desde un solo destino (filtraje)...					
																		
				3- Mirar porque una vez colocamos el receptor en el estado de recepción, en el motor de recepción en el estado "RADIO_MANAGER_WAIT_FOR_FRAME", si consultamos el estado
				   este aparece como READY y no como RX <<<--- OK, se ha modificado el motor de Rx para que deje al motor Tx transmitir cuando es necesario	
																												
				3.1- Solventar porque al enviar desde el emisor, el dispositivo receptor no se pone en Rx otra vez para esperar paquetes <<<---El motor de Rx detectara si esta en readyy lo pondrá en RX
																                                
				4- Realizar una Tx,Rx desde dos dispositivos liteMote <<<-- EN ELLO
					
				5- Cambiar la modulacion y el datarate para poder ver si el link se sigue manteniendo <<<--- EN ELLO 
														
TAREA ACTUAL: 4- Realizar una Tx,Rx desde dos dispositivos liteMote <<<-- EN ELLO
----------------                            

  4.1 - Mirar Porque el ping de radio no se esta enviando
    4.1.1 -> pasa algo con la variable datalenght del paquete recibido por serie desde el PC - nodo base OK, arreglado, problema del gateway     
    4.1.2 -> Se envia ok por radio, mirar que se carga en los datos del paquete (direcciones, payload, etc...) mirar como llegar a recibir desde el otro nodo
              -> las direcciones deben de ser de 1 byte
		
		
			


